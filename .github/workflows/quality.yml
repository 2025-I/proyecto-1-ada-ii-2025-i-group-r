name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
      security-events: write
      checks: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install unidecode pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV

      - name: Run tests with coverage
        run: |
          python -m pytest --cov=./src --cov-report=xml:./coverage.xml --cov-config=.coveragerc tests/
          ls -la coverage.xml  # Verificar generaci√≥n del reporte

      - name: Fix coverage paths for SonarCloud
        run: |
          sed -i 's|<source>src</source>|<source>.</source>|g' coverage.xml
          sed -i 's|filename="|filename="src/|g' coverage.xml
          grep -E "source|filename" coverage.xml | head -n 10  # Verificar cambios

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.working.directory=.scworkdir
            -Dsonar.python.coverage.reportPaths=./coverage.xml
            -Dsonar.python.coveragePlugin=cobertura
            -Dsonar.sources=./src
            -Dsonar.tests=./tests
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ github.token }}
